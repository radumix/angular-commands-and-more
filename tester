html inspect 


async function waitForElement(xpath, timeout = 5000) {
    const startTime = Date.now();
    
    return new Promise((resolve, reject) => {
        function checkElement() {
            let element = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            
            if (element) {
                resolve(element);
            } else if (Date.now() - startTime >= timeout) {
                reject(new Error(`Element not found within ${timeout}ms`));
            } else {
                setTimeout(checkElement, 100); // Check again after 100ms
            }
        }
        checkElement();
    });
}

async function checkElements() {
    try {
        // Try to find the primary element with wait
        let element = await waitForElement("//primary_xpath_here");
        console.log("Primary element found:", element);
    } catch (error) {
        console.log(error.message);
        try {
            // If primary not found, try fallback
            let element = await waitForElement("//fallback_xpath_here");
            console.log("Fallback element found:", element);
        } catch (fallbackError) {
            console.log(fallbackError.message);
            // Handle case where neither element is found
        }
    }
}

checkElements();

